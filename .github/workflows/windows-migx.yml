name: Build (Windows-MIGX)

on:
  push:
    paths:
      - 'vsmigx/**'
      - '.github/workflows/windows-migx.yml'
  workflow_call:
    inputs:
      tag:
        description: 'which tag to upload to'
        required: true
        type: string
    secrets:
      REPO_TOKEN:
        required: true
  workflow_dispatch:
    inputs:
      tag:
        description: 'which tag to upload to'
        default: ''

jobs:
  build-windows:
    runs-on: windows-2022

    defaults:
      run:
        shell: cmd
        working-directory: vsmigx

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: Cache HIP
      id: cache-hip
      uses: actions/cache@v4
      with:
        path: C:\Program Files\AMD\ROCm
        key: ${{ runner.os }}-rocm-6.1.2

    - name: Setup HIP
      if: steps.cache-hip.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        curl -s -o hip_installer.exe -L https://download.amd.com/developer/eula/rocm-hub/AMD-Software-PRO-Edition-24.Q3-WinSvr2022-For-HIP.exe
        Start-Process hip_installer.exe -ArgumentList '-install' -NoNewWindow -Wait

    - name: Download MIGraphX Precompilation
      run: |
        curl -s -o migx.zip -LJO https://github.com/AmusementClub/AMDMIGraphX/releases/download/rocm-4.1.0-1515-g9cf49f92c-240821-0458/migraphx-win64.zip
        unzip -q migx.zip

    - name: Download VapourSynth headers
      run: |
        curl -s -o vs.zip -L https://github.com/vapoursynth/vapoursynth/archive/refs/tags/R54.zip
        unzip -q vs.zip
        mv vapoursynth-*/ vapoursynth/

    - name: Configure
      run: cmake -S . -B build -G Ninja -Wno-dev -LA
        -D CMAKE_BUILD_TYPE=Release
        -D CMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded
        -D VAPOURSYNTH_INCLUDE_DIRECTORY="%cd%/vapoursynth/include"
        -D hip_DIR="C:/Program Files/AMD/ROCm/6.1/lib/cmake/hip"
        -D HIP_PLATFORM=amd
        -D migraphx_DIR="%cd%/migraphx/lib/cmake/migraphx"

    - name: Build
      run: cmake --build build --verbose

    - name: Install
      run: cmake --install build --prefix install

    - name: Prepare for upload
      run: |
        mkdir artifact
        copy install\bin\vsmigx.dll artifact\

    - name: Describe
      run: git describe --tags --long

    - name: Dump dependencies
      run: dumpbin /dependents artifact/vsmigx.dll

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: VSMIGX-Windows-x64
        path: vsmigx/artifact

    - name: Compress artifact for release
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.tag != ''
      run: |
        cd artifact
        7z a -t7z -mx=7 ../../VSMIGX-Windows-x64.${{ github.event.inputs.tag }}.7z .

    - name: Release
      uses: softprops/action-gh-release@v2
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.tag != ''
      with:
        tag_name: ${{ inputs.tag }}
        files: VSMIGX-Windows-x64.${{ github.event.inputs.tag }}.7z
        fail_on_unmatched_files: true
        generate_release_notes: false
        prerelease: true

